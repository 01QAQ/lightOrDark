该功能应用了uview、vuex、mixin 
建立store文件夹(与pages文件夹同级)
在store文件夹中建立index.js文件
内容如下:
import Vue from "vue"
import Vuex from "vuex"

Vue.use(Vuex)

const store = new Vuex.Store({
	state: {
		curThemeType: uni.getStorageSync('theme') ?? 'light',
	},
	mutations: {
		setCurThemeType(state) {
			state.curThemeType = state.curThemeType === 'light' ? 'dark' : 'light';
			uni.setStorageSync('theme', state.curThemeType);
		}
	},
})

// 导出
export default store

在common文件夹中简历mixins.js文件
内容如下:
import { mapState } from 'vuex';
export default {
   	 computed: {
		...mapState(['curThemeType']),
	}
}
在uni.scss文化文件中添加

/* 白天/夜间主图切换 */
// 白天 background
$light-bg-main: #f5f5f5;
$light-bg-gross: #fff;
$light-bg-menu: #f5f5f5;
// 夜间 background
$dark-bg-main: #19223a;
$dark-bg-gross: #2c2c2c;
$dark-bg-menu: #2b3757;
// 白天 font
$light-font-title: #666;
$light-font-gross: #666;
// 夜间 font
$dark-font-title: rgba(255, 255, 255, 0.7);
$dark-font-gross: rgba(255, 255, 255, 0.5);
// 白天 border
$light-border-divide: #dfdfdf;
// 夜间 border
$dark-border-divide: #364364;

在static文件夹建立style文件夹,建立sunOrMoon.scss文件

建立首页和我的两个页面,
使用uview中的tabbar、navbar插件封装好组件并引入到需要的页面中
navbar组件中
<template>
	<view class="tab_logo" >
		<u-navbar :title="pageTitle" :is-back="true" :background="{
			backgroundColor: curThemeType === 'dark' ? '#2C2C2C ' : ' #fff'
		}" :title-color="curThemeType === 'dark' ? '#fff' : '#2C2C2C'" :back-icon-color="
			 curThemeType === 'dark' ? '#dbdbdb ' : '#515151'
		">
		</u-navbar>
	</view>
</template>
别忘了props接参
props:['pageTitle']
tabbar组件中
<template>
	<view class="">
		<u-tabbar :before-switch="beforeSwitch" @change="onchange" active-color="#409EFF"
			:inactive-color="curThemeType === 'dark' ? '#999' : '#707070'"
			:bg-color="curThemeType === 'dark' ? '#2C2C2C' : '#fff'" v-model="current" :list="list" height="60px"
			mid-button-size="40px"></u-tabbar>
	</view>
</template>

<script>
	export default {
		props: ['type'],
		data() {
			return {
				list: [{
						iconPath: "home",
						selectedIconPath: "home-fill",
						text: '首页',
						pagePath: '/pages/index/index',
					},
					{
						iconPath: "account",
						selectedIconPath: "account-fill",
						text: '我的',
						pagePath: '/pages/my/my',
					},
				],
				current: 0,
			}
		},
		onShow() {},
		onLoad() {},
		methods: {
			beforeSwitch(e) {
				uni.switchTab({
					url: this.list[e].pagePath
				})

			},
		},
		onchange(e) {}
	}
</script>

<style>
</style>

在切换主题按钮所在的页面中
<view style="width="100%" @click="handleChangeSkin"><view>

methods:{
	this.$store.commit('setCurThemeType');
}

页面里的
<view class="gross" :class="curThemeType === 'dark' ? 'gross-dark' : ''">
	<view class="aaa" style="width:100%;height:1500rpx;"></view>
</view>
最后在app.vue中的onLaunch方法中调用一次
onLaunch(){
	this.handleSetTabBar()
}
methods:{
	handleSetTabBar() {
		const theme = uni.getStorageSync('theme');
	}
}


